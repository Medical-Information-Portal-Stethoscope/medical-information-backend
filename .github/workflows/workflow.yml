name: Stethoscope backend

on: [push]

jobs:

  linters:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./stethoscope/requirements/dev.txt

    - name: Test with flake8 and mypy
      run: |
        flake8 .
        mypy .

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./stethoscope/requirements/tests.txt

    - name: Test with pytest
      run: |
        pytest

  dispatch:
    if: github.ref == 'refs/heads/develop'
    needs: [linters, tests]
    runs-on: ubuntu-latest
    steps:
      - name: Push to repo
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: "Medical-Information/medical-information-portal"
          event-type: update_remote
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "module": "backend", "branch": "develop"}'

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: [linters, tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/stethoscope-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USER }}
          port: ${{ vars.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ./stethoscope_infra
            sudo docker compose down
            echo POSTGRES_DB=${{ vars.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ vars.POSTGRES_USER }} >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo POSTGRES_HOST=${{ vars.POSTGRES_HOST }} >> .env
            echo POSTGRES_PORT=${{ vars.POSTGRES_PORT }} >> .env
            echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
            echo DEBUG=${{ vars.DEBUG }} >> .env
            echo "ALLOWED_HOSTS=${{ vars.ALLOWED_HOSTS }}" >> .env
            echo USE_SQLITE=${{ vars.USE_SQLITE }} >> .env
            echo EMAIL_HOST=${{ vars.EMAIL_HOST }} >> .env
            echo EMAIL_HOST_USER=${{ vars.EMAIL_HOST_USER }} >> .env
            echo "EMAIL_HOST_PASSWORD=${{ vars.EMAIL_HOST_PASSWORD }}" >> .env
            echo EMAIL_PORT=${{ vars.EMAIL_PORT }} >> .env
            sudo docker image rm ${{ vars.DOCKER_USERNAME }}/stethoscope-backend
            sudo docker pull ${{ vars.DOCKER_USERNAME }}/stethoscope-backend
            sudo docker compose up -d
