# Generated by Django 4.2.4 on 2023-08-30 17:42

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ('articles', '0012_uniquewords_indexes_triggers'),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
                CREATE OR REPLACE FUNCTION update_article_search_vector()
                RETURNS TRIGGER
                LANGUAGE plpgsql AS $$
                BEGIN
                SELECT
                setweight(to_tsvector('russian', coalesce(NEW.title, '')), 'A') ||
                setweight(to_tsvector('russian', coalesce(NEW.source_name, '')), 'B') ||
                setweight(to_tsvector('russian', coalesce(NEW.text, '')), 'C') ||
                setweight(to_tsvector('russian',
                  (SELECT coalesce(string_agg(first_name, ' '), '')
                   FROM users_user WHERE users_user.id = NEW.author_id)), 'B') ||
                setweight(to_tsvector('russian',
                  (SELECT coalesce(string_agg(last_name, ' '), '')
                   FROM users_user WHERE users_user.id = NEW.author_id)), 'B')
                INTO NEW.search_vector;
                RETURN NEW;
                END;
                $$;

                CREATE OR REPLACE FUNCTION null_article_search_vector()
                RETURNS TRIGGER
                LANGUAGE plpgsql AS $$
                BEGIN
                  UPDATE articles_article SET search_vector = NULL
                    WHERE author_id = NEW.id;
                  RETURN NEW;
                END;
                $$;

                CREATE OR REPLACE TRIGGER users_rename_trigger
                AFTER UPDATE OF first_name, last_name ON users_user
                FOR EACH ROW
                EXECUTE PROCEDURE null_article_search_vector();

                UPDATE articles_article SET search_vector = NULL;

                INSERT INTO articles_uniquewords (word) SELECT word
                FROM ts_stat(
                  'SELECT to_tsvector(''simple'', title) FROM articles_article'
                )
                ON CONFLICT (word) DO NOTHING;
                INSERT INTO articles_uniquewords (word) SELECT word
                FROM ts_stat(
                  'SELECT to_tsvector(''simple'', source_name) FROM articles_article'
                )
                ON CONFLICT (word) DO NOTHING;
                INSERT INTO articles_uniquewords (word) SELECT word
                FROM ts_stat(
                  'SELECT to_tsvector(''simple'', text) FROM articles_article'
                )
                ON CONFLICT (word) DO NOTHING;
                INSERT INTO articles_uniquewords (word) SELECT word
                FROM ts_stat(
                  'SELECT to_tsvector(''simple'', first_name) FROM users_user'
                )
                ON CONFLICT (word) DO NOTHING;
                INSERT INTO articles_uniquewords (word) SELECT word
                FROM ts_stat(
                  'SELECT to_tsvector(''simple'', last_name) FROM users_user'
                )
                ON CONFLICT (word) DO NOTHING;
                """,
            reverse_sql="""
                DROP TRIGGER IF EXISTS users_rename_trigger ON fts_comment;

                CREATE OR REPLACE FUNCTION update_article_search_vector()
                RETURNS TRIGGER
                LANGUAGE plpgsql AS $$
                BEGIN
                SELECT
                setweight(to_tsvector('russian', coalesce(NEW.title, '')), 'A') ||
                setweight(to_tsvector('russian', coalesce(NEW.source_name, '')), 'B') ||
                setweight(to_tsvector('russian', coalesce(NEW.text, '')), 'C')
                INTO NEW.search_vector;
                RETURN NEW;
                END;
                $$;

                DROP FUNCTION IF EXISTS null_article_search_vector() CASCADE;

                UPDATE articles_article SET search_vector = NULL;
                """,
        ),
    ]
